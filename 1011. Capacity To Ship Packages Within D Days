class Solution {
public:
    
    bool satsified(int mid, vector<int>& weights, int days)
    {
        int n=weights.size();
        int D=1;
        int total=0;
        bool isValid=true;
        for(int i=0;i<n;i++)
        {
            if(weights[i]>mid)
            {
                isValid=false;
                return false;
            }
            if(total+weights[i]<=mid)
            {
                total+=weights[i];
            }
            else
            {
                D++;
                total=weights[i];
            }
        }
        if(!isValid)
        {
            return false;
        }
        else
        {
            return (D<=days);
        }
    }
    
    int shipWithinDays(vector<int>& weights, int days) {
        int l=0,r=0;
        for(auto i:weights)
        {
            l=max(l,i);
            r+=i;
        }
        while(l<r)
        {
            int mid=(l+r)/2;
            if(satsified(mid,weights,days))
            {
                r=mid;
            }
            else
            {
                l=mid+1;
            }
        }
        return l;
    }
};
