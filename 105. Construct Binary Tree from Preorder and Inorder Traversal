/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        m_preorder=preorder;
        m_inorder=inorder;
        return constructTree(0, preorder.size()-1);
    }
    
    TreeNode* constructTree(int left, int right)
    {
        if(left>right)
            return NULL;
        
        int i=0;
        while(m_inorder[i] != m_preorder[m_curr])
            i++;
        
        m_curr++;
        TreeNode* root = new TreeNode(m_inorder[i]);
        root->left = constructTree(left, i-1);
        root->right = constructTree(i+1, right);
        
        return root;
    }
    
private:
    int m_curr=0;
    vector<int> m_preorder, m_inorder;
};
