class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int rows=obstacleGrid.size();
        int columns=obstacleGrid[0].size();
        
        int ans[rows][columns];
        bool flag=false;
        
        for(int i=0;i<columns;i++)
        {
            if(flag==true || obstacleGrid[0][i]==1)
            {
                flag=true;
                ans[0][i]=0;
            }
            else
            {
                ans[0][i]=1;
            }
        }
        
        flag=false;
        for(int i=0;i<rows;i++)
        {
            if(flag==true || obstacleGrid[i][0]==1)
            {
                flag=true;
                ans[i][0]=0;
            }
            else
            {
                ans[i][0]=1;
            }
        }
        
        for(int i=1;i<rows;i++)
        {
            for(int j=1;j<columns;j++)
            {
                if(obstacleGrid[i][j]==1)
                {
                    ans[i][j]=0;
                }
                else
                {
                    ans[i][j]=ans[i-1][j]+ans[i][j-1];
                }
            }
        }
        return ans[rows-1][columns-1];
    }
};
