/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool is_bst(TreeNode * root, long int min , long int max)
    {
        //max=2147483647;
        //min=-2147483648;
        if(!root)
        {
            return true;
        }
        else if(root->val > min  && root->val < max)
        {
            return (is_bst(root->left , min , root->val) && (is_bst(root->right , root->val , max)));
        }
        return false;
    }
    
    bool isValidBST(TreeNode* root) {
        long int max=2147483648;
        long int min=-2147483649;    
        if(!root)
        {
            return true;
        }
        if(is_bst(root->left , min , root->val) && is_bst(root->right , root->val , max))
        {
            return true;
        }
        return false;
    }
};
